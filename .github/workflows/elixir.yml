name: Elixir CI

on:
  push:
    branches: 
      - master
  pull_request:

env:
  MIX_ENV: test

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-20.04

    services:
      postgres:
        image: postgres:12
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Read .tool-versions
        uses: marocchino/tool-versions-action@v1
        id: versions
      - name: Set up Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{steps.versions.outputs.elixir}}
          otp-version: ${{ steps.versions.outputs.erlang}}
      - name: Install dependencies
        run: mix deps.get
      - name: Check Formatting
        run: mix format --check-formatted
      - name: Check Compile Warnings
        run: mix compile --warnings-as-errors --all-warnings
      - name: Run tests
        run: mix test
      - name: Check Credo Warnings
        run: mix credo --strict --only warning
      # - name: Check Dialyzer
      #   run: mix dialyzer

  publish:
    name: Publish
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'push' }}

    # don't both publishing if the CI failed
    needs: build

    steps:
    - uses: actions/checkout@v2

    - name: Build Image
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: statusblog
        tags: latest ${{ github.sha }}
        dockerfiles: |
          ./Containerfile

    # Podman Login action (https://github.com/redhat-actions/podman-login) also be used to log in,
    # in which case 'username' and 'password' can be omitted.
    - name: Push To docker.io
      id: push-to-docker
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: docker.io
        username: statusblog
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Print image url
      run: echo "Image pushed to ${{ steps.push-to-docker.outputs.registry-paths }}"

